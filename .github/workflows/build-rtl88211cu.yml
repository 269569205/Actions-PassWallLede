#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com

#=================================================

name: Build OpenWrt-rtl8821cu

on:
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: rasp4b-rtl88211cu.config
  DIY_SH: diy.sh
  FREE_UP_DISK: false
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
       docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
    - name: Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: add passwall feeds
      run: |
        cd openwrt/package
        git clone https://github.com/kenzok8/openwrt-packages.git
        git clone https://github.com/kenzok8/small.git
        git clone https://github.com/lisaac/luci-app-dockerman
        git clone https://github.com/lisaac/luci-app-diskman
        cd kernel
        git clone https://github.com/yichya/rtl8821cu-openwrt
    - name: Update feeds
    
      run: |
        cd openwrt && ./scripts/feeds update -a
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        #  [ -e files ] && mv files openwrt/files
        mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        ./$DIY_SH
        cd openwrt
        make defconfig
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile firmware
      run: |
         cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
    - name: Prepare artifact
      run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./openwrt/bin/targets/ -type d -name "packages")
          cp -rf $(find ./openwrt/bin/targets/ -type f) ./artifact/firmware/
          cp ./openwrt/.config ./artifact/firmware/
          cp -rf $(find ./openwrt/bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./openwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_package
          path: ./artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_firmware
          path: ./openwrt/bin/targets/
  

    - name: Upload release asset
      if: github.event == 'release'
      uses: svenstaro/upload-release-action@v2
      with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
